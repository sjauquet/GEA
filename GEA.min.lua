--[[
%% autostart
%% properties
%% globals
--]]


-- v 5.40
-- ==================================================
-- GEA : Gestionnaire d'Evénements Automatique
-- ==================================================
-- [FR] Scénario permettant de contrôler si un périphérique est
-- activé depuis trop longtemps ou lancer un push d'avertissement.
-- Ce scénario permet une annotation plus simple que le code LUA
-- il nécessite néanmoins quelques connaissances.
--
-- [EN] This scene allow you to check every X second the status
-- of a module and send actions if the module is activated since too long.
-- This scene allow you a more simple annotation than LUA
-- it requires some knowledge
--
-- Auteur : Steven P. with modifications of Hansolo and Shyrka973
-- Version : 5.40
-- Special Thanks to :
-- jompa68, Fredric, Diuck, Domodial, moicphil, lolomail, byackee,
-- JossAlf, Did,  sebcbien, chris6783 and all other guy from Domotique-fibaro.fr
-- ------------------------------------------------------------
-- Historique / History
-- ------------------------------------------------------------
-- L'historique complet est diponible ici / the full history is available here :
-- http://www.domotique-fibaro.fr/index.php/topic/1082-gea-gestionnaire-dévénements-automatique/?p=12428



-- Paramétrage de GEA / GEA configuration
function config()
  GEA.isVersionFour           = true -- On est en version 4.017 Beta ou supérieure /
  GEA.language                = "FR" -- Votre langue : FR (default) / Your language : EN
  GEA.checkEvery              = 30 -- On vérifie toutes les X secondes  (default : 30) / Check every X seconds
  GEA.portables               = {179} -- Liste des portables devant recevoir une notification {70, 71} / Smartphones you want to be notified
  GEA.debug                   = false -- Affichage des traces dans la console (default : false) / Show trace in the debug window
  -- GEA.getGlobalForActivation = {"SuspendreGEA", "non"} -- active ou désactive l'exécution de GEA via une variable globale / active or deactive GEA execution with a global variable
  -- GEA.catchError             = false
  GEA.optimize                = GEA.typeOptimize["IMMEDIATE_ONLY"]
  -- option : GEA.typeOptimize["NONE"], GEA.typeOptimize["IMMEDIATE_ONLY"], GEA.typeOptimize["ALL"]
  -- permet d'optimiser les soucis liés au getName et getRoom de fibaro mais n'affiche plus le nom des modules concernés.
end



-- Ajouter ici les événements à exécuter / Add here events to schedule
-- Une liste d'exemples est disponible dans un fichier annexe samples.lua / A samples list is available in another file called samples.lua
function setEvents()



end



-- ==================================================
--
--  NE PLUS RIEN TOUCHER / DON'T TOUCH UNDER THIS POINT
--
-- ==================================================
--
-- SCRIPT GEA PRINCIPAL / GEA MAIN SCRIPT
--
-- ==================================================
if not GEA then GEA={}GEA.version="5.40"GEA.language="FR"GEA.checkEvery=30;GEA.index=0;GEA.isVersionFour=true;GEA.globalTasks="GEA_Tasks"GEA.regexFullAllow=false;GEA.portables={}GEA.todo={}GEA.power="valueSensor"GEA.suspended=""GEA.keys={ID=1,SECONDES=2,MESSAGE=3,ISREPEAT=4,PARAMS=5,NAME=6,NBRUN=7,DONE=8,VALUE=9,GROUPS=10,OK=11,TOTALRUNS=12,INDEX=13,MAXTIME=14,ROOM=15}GEA.debug=false;GEA.catchError=true;GEA.pos=1;GEA.useTasksGlobal=true;GEA.tasks=""GEA.typeOptimize={NONE=0,IMMEDIATE_ONLY=1,ALL=2}GEA.optimize=GEA.typeOptimize["NONE"]GEA.getGlobalForActivation={}GEA.source=fibaro:getSourceTrigger()GEA.translate={true,true}GEA.translate["FR"]={ACTIONS="traitement des actions",ACTIVATED="activé",ACTIVATED_SINCE="activé depuis ",ADDED_DIRECT="ajout de la tâche pour lancement instantané",ADDED_FOR="ajout de la tâche pour",ALWAYS="Toujours",BATTERIE="Pile faible",CHECKING="vérification",CHECKING_DATE="vérification des dates",CHECKING_TIME="vérification plage horaire",CHECK_IF="vérification de l'exception",CHECK_IF_FAILED="désactivé par exception",CHECK_MAIN="vérification de l'activation",CHECK_STARTED="démarrage vérification",CURRENT_TIME="L'heure actuelle",DATE_NOT_ALLOWED="n'est pas dans la plage de dates spécifiées",DESACTIVATED="désactivé",DEVICE_NOT_FOUND="ID non trouvé",DONE="tâche effectuée et suspendue",ERROR="!!! ERREUR !!!",ERROR_IF="IF malformé",GEA_SUSPENDED="Scénario suspendu par la variable globale ",HOUR="heure",HOURS="heures",MINUTE="minute",MINUTES="minutes",NOTHING_TODO="aucun traitement à effectuer",NOTHING_TODOID="aucun traitement à effectuer pour l'ID :",NOT_INCLUDED="n'est pas inclus dans",REQUIRED="attendu",RESTART="Redémarrage",RUN="En cours",RUNNING="en exécution",RUN_FOR="Durée des traitements : ",RUN_NEW="nouveau délai : ",RUN_SINCE="tourne depuis",SECOND="seconde",SECONDS="secondes",SLEEPING="Endormi pendant",SUPSENDED="Arrêtée",SUSPEND_ERROR="ERROR GEA.Suspend demande un tableau en paramètre 2",TIME_IN="vérification contrôlée car dans la plage horaire spécifiée ",TIME_NOT_ALLOWED="n'est pas autorisée",TIME_OUT="vérification ignorée car en dehors de la plage horaire : ",TODAY="Aujourd'hui ",TODAY_NOT_DST="Aujourd'hui n'est pas en mode DST",VALUE="valeur",WILL_SUSPEND="entrainera la suspension de"}GEA.translate["EN"]={ACTIONS="doing actions",ACTIVATED="activated",ACTIVATED_SINCE="activated since ",ADDED_DIRECT="task added for instant run",ADDED_FOR="task added for",ALWAYS="Always",BATTERIE="Low batterie",CHECKING="checking",CHECKING_DATE="checking dates",CHECKING_TIME="checking time range",CHECK_IF="'if' checking",CHECK_IF_FAILED="'if' stop the check",CHECK_MAIN="activation checking",CHECK_STARTED="starting checking",CURRENT_TIME="Current hour",DATE_NOT_ALLOWED="is not in the specified dates range",DESACTIVATED="desactivated",DEVICE_NOT_FOUND="Device ID not found",DONE="task done and suspended",ERROR="!!! ERROR !!!",ERROR_IF="IF malformed",GEA_SUSPENDED="Scene suspended by the global variable ",HOUR="hour",HOURS="hours",MINUTE="minute",MINUTES="minutes",NOTHING_TODO="nothing to do",NOTHING_TODOID="nothing to do for ID:",NOT_INCLUDED="is not included in",REQUIRED="excepted",RESTART="Restart",RUN="Run",RUNNING="Running",RUN_FOR="Duration : ",RUN_NEW="new delay : ",RUN_SINCE="running since",SECOND="second",SECONDS="seconds",SLEEPING="Sleeping for",SUPSENDED="Stopped",SUSPEND_ERROR="ERROR GEA.Suspend require a table as second parameter",TIME_IN="checking done time range is ok ",TIME_NOT_ALLOWED="is not allowed",TIME_OUT="checking abort because out of time range: ",TODAY="Today ",TODAY_NOT_DST="Today is not in DST mode",VALUE="value",WILL_SUSPEND="will suspend "}GEA.add=function(a,b,c,d)local e=false;local f=false;local g=-1;local h={}local i={}local j={}local k={}if d and#d>0 then for l=1,#d do lowCapsArg=string.lower(d[l][1])if lowCapsArg=="repeat"then e=true elseif lowCapsArg=="maxtime"then g=tonumber(d[l][2])elseif lowCapsArg=="group"then h[tonumber(d[l][2])]=true elseif lowCapsArg=="notstarted"then f=true end end;i=d end;if g>-1 then e=true end;GEA.index=GEA.index+1;if type(a)=="table"then if type(a[1])=="number"or type(a[1])=="table"then local m={}for l=2,#a do table.insert(m,a[l])j[l],k[l]=GEA.getName(a[l])end;a=a[1]if type(a)=="table"and type(a[1])=="string"and string.lower(a[1])=="alarm"then e=false;b=1 end;table.insert(i,{"If",m})elseif type(a[1])=="string"then if string.lower(a[1])=="global"and#a>2 and a[2]==""and a[3]==""then a=true elseif string.lower(a[1])=="alarm"then e=false;b=1 end end end;j[1],k[1]=GEA.getName(a)local n={a,b,c,e,i,j,0,false,{},h,false,0,GEA.index,g,k}if GEA.source["type"]=="autostart"and tonumber(n[GEA.keys["SECONDES"]])>=0 then GEA.insert(n)GEA.log("Add Autostart",n,GEA.translate[GEA.language]["ADDED_FOR"].." "..b.." "..GEA.translate[GEA.language]["SECONDS"],true,"grey")if f then local o=GEA.getCode("S",n[GEA.keys["INDEX"]])if GEA.suspended~=nil then GEA.suspended=string.gsub(GEA.suspended,o,"")end;GEA.suspended=GEA.suspended..o end elseif GEA.source["type"]=="global"and tonumber(n[GEA.keys["SECONDES"]])<0 then if type(n[GEA.keys["ID"]])=="table"and GEA.match(string.lower(n[GEA.keys["ID"]][1]),"global|global.")and n[GEA.keys["ID"]][2]==GEA.source["name"]then GEA.insert(n)GEA.log("Add Global",n,GEA.translate[GEA.language]["ADDED_DIRECT"],true,"grey")end elseif GEA.source["type"]=="property"and tonumber(n[GEA.keys["SECONDES"]])<0 then local a=0;if type(n[GEA.keys["ID"]])=="number"then a=n[GEA.keys["ID"]]elseif type(n[GEA.keys["ID"]])=="table"then a=n[GEA.keys["ID"]][2]if string.lower(n[GEA.keys["ID"]][1])=="sceneactivation"and#n[GEA.keys["ID"]]>2 then if tonumber(fibaro:getValue(a,"sceneActivation"))~=tonumber(n[GEA.keys["ID"]][3])then a=-1 end end end;if tonumber(a)==tonumber(GEA.source["deviceID"])then GEA.insert(n)GEA.log("Add Property",n,GEA.translate[GEA.language]["ADDED_DIRECT"],true,"grey")end end;return n[GEA.keys["INDEX"]]end;GEA.insert=function(n)GEA.todo[GEA.pos]=n;GEA.pos=GEA.pos+1;return n[GEA.keys["INDEX"]]end;GEA.addOrRemoveTask=function(p,q,r)local s=nil;local o=GEA.getCode(p,q)if GEA.useTasksGlobal then s=fibaro:getGlobalValue(GEA.globalTasks)else s=GEA.tasks end;if s~=nil then s=string.gsub(s,o,"")end;if r then if GEA.useTasksGlobal then fibaro:setGlobal(GEA.globalTasks,s..o)else GEA.tasks=s..o end else if GEA.useTasksGlobal then fibaro:setGlobal(GEA.globalTasks,s)else GEA.tasks=s end end end;GEA.isTask=function(p,q)local s=nil;local o=GEA.getCode(p,q)if GEA.useTasksGlobal then s=fibaro:getGlobalValue(GEA.globalTasks)else s=GEA.tasks end;if s~=nil then return string.match(s,o)end;return nil end;GEA.getCode=function(p,q)return"|"..p.."_"..q.."|"end;GEA.getName=function(a)if GEA.optimize==GEA.typeOptimize["ALL"]or GEA.source["type"]~="autostart"and GEA.optimize==GEA.typeOptimize["IMMEDIATE_ONLY"]then return"n/a","n/a"end;local k=""if type(a)=="nil"or type(a)=="boolean"then return GEA.translate[GEA.language]["ALWAYS"],""elseif type(a)=="number"then return fibaro:getName(tonumber(a)),GEA.getRoom(tonumber(a))elseif type(a)=="table"and GEA.match(string.lower(a[1]),"global|global.")then return a[2],""elseif type(a)=="table"then lowerCaps=string.lower(a[1])if a[2]then idNumeric=tonumber(a[2])end;if lowerCaps=="batteries"then return"Batteries <= "..a[1],""elseif lowerCaps=="sceneactivation"then return"Scene ["..a[2].."|"..fibaro:getName(idNumeric).."] = "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="sensor"then return"Sensor ["..a[2].."|"..fibaro:getName(idNumeric).."] = "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="sensor+"then return"Sensor ["..a[2].."|"..fibaro:getName(idNumeric).."] > "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="sensor-"then return"Sensor ["..a[2].."|"..fibaro:getName(idNumeric).."] < "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="sensor!"then return"Sensor ["..a[2].."|"..fibaro:getName(idNumeric).."] ~= "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="battery"then return"["..a[2].."|"..fibaro:getName(idNumeric).."] <= "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="value"then return"Value ["..a[2].."|"..fibaro:getName(idNumeric).."] = "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="value+"then return"Value ["..a[2].."|"..fibaro:getName(idNumeric).."] > "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="value-"then return"Value ["..a[2].."|"..fibaro:getName(idNumeric).."] < "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="value!"then return"Value ["..a[2].."|"..fibaro:getName(idNumeric).."] ~= "..a[3],GEA.getRoom(idNumeric)elseif lowerCaps=="dead"then return"Dead ["..a[2].."|"..fibaro:getName(idNumeric).."]",GEA.getRoom(idNumeric)elseif lowerCaps=="slider"then return"Slider ["..a[2].."|"..a[3].."] = "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="slider+"then return"Slider ["..a[2].."|"..a[3].."] > "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="slider-"then return"Slider ["..a[2].."|"..a[3].."] < "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="slider!"then return"Slider ["..a[2].."|"..a[3].."] ~= "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="label"then return"Label ["..a[2].."|"..a[3].."] = "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="label!"then return"Label ["..a[2].."|"..a[3].."] ~= "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="function"then return"Function",""elseif lowerCaps=="weather"then return"Weather",""elseif lowerCaps=="alarm"then return"Alarm "..fibaro:getValue(idNumeric,"ui.lblAlarme.value"),""elseif lowerCaps=="property"then return"Property ["..a[2].."|"..a[3].."] = "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="property!"then return"Property ["..a[2].."|"..a[3].."] ~= "..a[4],GEA.getRoom(idNumeric)elseif lowerCaps=="group"then return"Group ["..a[2].."]",""else end end end;GEA.getRoom=function(a)local t=fibaro:getRoomID(a)if type(t)=="number"then local u=fibaro:getRoomName(t)if type(u)=="string"then return u end end;return""end;GEA.checkDay=function(v)local w=false;jours=v;jours=string.gsub(jours,"All","Weekday,Weekend")jours=string.gsub(jours,"Weekday","Monday,Tuesday,Wednesday,Thursday,Friday")jours=string.gsub(jours,"Weekend","Saturday,Sunday")if string.find(string.lower(jours),string.lower(os.date("%A")))then w=true end;return w end;GEA.checkTimes=function(n)GEA.log("Check",n,GEA.translate[GEA.language]["CHECKING_DATE"],false)if not n[GEA.keys["PARAMS"]]then return true end;local x=true;local w=true;local y=true;local z=true;local jours=""if type(n[GEA.keys["PARAMS"]])=="table"then for l=1,#n[GEA.keys["PARAMS"]]do local A=n[GEA.keys["PARAMS"]][l]if type(A)=="table"then if string.lower(A[1])=="days"then w=GEA.checkDay(A[2])elseif string.lower(A[1])=="dst"then z=os.date("*t",os.time()).isdst elseif string.lower(A[1])=="notdst"then z=not os.date("*t",os.time()).isdst elseif string.lower(A[1])=="dates"then y=false;local B=os.date("%Y%m%d")local C=A[2]if string.len(C)==5 then C=C.."/"..os.date("%Y")end;C=string.format("%04d",GEA.split(C,"/")[3])..string.format("%02d",GEA.split(C,"/")[2])..string.format("%02d",GEA.split(C,"/")[1])local D=A[3]if string.len(D)==5 then D=D.."/"..os.date("%Y")end;D=string.format("%04d",GEA.split(D,"/")[3])..string.format("%02d",GEA.split(D,"/")[2])..string.format("%02d",GEA.split(D,"/")[1])y=tonumber(B)>=tonumber(C)and tonumber(B)<=tonumber(D)end end end end;if w and z then local E=false;for l=1,#n[GEA.keys["PARAMS"]]do local A=n[GEA.keys["PARAMS"]][l]if type(A)=="table"and string.lower(A[1])=="dates"then if not E then y=false end;local B=os.date("%Y%m%d")local C=A[2]if string.len(C)==5 then C=C.."/"..os.date("%Y")end;C=string.format("%04d",GEA.split(C,"/")[3])..string.format("%02d",GEA.split(C,"/")[2])..string.format("%02d",GEA.split(C,"/")[1])local D=A[3]if string.len(D)==5 then D=D.."/"..os.date("%Y")end;D=string.format("%04d",GEA.split(D,"/")[3])..string.format("%02d",GEA.split(D,"/")[2])..string.format("%02d",GEA.split(D,"/")[1])if tonumber(C)>tonumber(D)and tonumber(C)>tonumber(B)then C=tonumber(C)-10000 end;if tonumber(B)>=tonumber(C)and tonumber(B)<=tonumber(D)then y=true;E=true end end end end;if w and z and y then for l=1,#n[GEA.keys["PARAMS"]]do local A=n[GEA.keys["PARAMS"]][l]if type(A)=="table"and string.lower(A[1])=="time"then x=false;if GEA.checkTime(n,GEA.flatTime(A[2]).."-"..GEA.flatTime(A[3]))then return true end end end else if not w then GEA.log("!CANCEL! CheckTimes",n,GEA.translate[GEA.language]["TODAY"].." "..os.date("%A").." "..GEA.translate[GEA.language]["NOT_INCLUDED"].." "..jours,false,"yellow")elseif not z then GEA.log("!CANCEL! CheckTimes",n,GEA.translate[GEA.language]["TODAY_NOT_DST"],false,"yellow")elseif not y then GEA.log("!CANCEL! CheckTimes",n,GEA.translate[GEA.language]["TODAY"].." "..os.date("%x").." "..GEA.translate[GEA.language]["DATE_NOT_ALLOWED"],false,"yellow")end end;if not x then GEA.log("!CANCEL! CheckTimes",n,GEA.translate[GEA.language]["CURRENT_TIME"].." "..os.date("%H:%M").." "..GEA.translate[GEA.language]["TIME_NOT_ALLOWED"],false,"yellow")end;return x and y and w and z end;GEA.flatTime=function(F)local G=string.lower(F)G=string.gsub(G," ","")G=string.gsub(G,"h",":")G=string.gsub(G,"sunset",fibaro:getValue(1,"sunsetHour"))G=string.gsub(G,"sunrise",fibaro:getValue(1,"sunriseHour"))if string.find(G,"<")then G=GEA.flatTime(GEA.split(G,"<")[1]).."<"..GEA.flatTime(GEA.split(G,"<")[2])end;if string.find(G,">")then G=GEA.flatTime(GEA.split(G,">")[1])..">"..GEA.flatTime(GEA.split(G,">")[2])end;if string.find(G,"+")then local F=GEA.split(G,"+")[1]local r=GEA.split(G,"+")[2]local H=os.date("*t")local I=GEA.split(F,":")[2]local J=os.time{year=H.year,month=H.month,day=H.day,hour=tonumber(GEA.split(F,":")[1]),min=tonumber(GEA.split(F,":")[2]),sec=0}J=J+r*60;G=os.date("*t",J)G=string.format("%02d",G.hour)..":"..string.format("%02d",G.min)elseif string.find(G,"-")then local F=GEA.split(G,"-")[1]local r=GEA.split(G,"-")[2]local H=os.date("*t")local J=os.time{year=H.year,month=H.month,day=H.day,hour=tonumber(GEA.split(F,":")[1]),min=tonumber(GEA.split(F,":")[2]),sec=0}J=J-r*60;G=os.date("*t",J)G=string.format("%02d",G.hour)..":"..string.format("%02d",G.min)elseif string.find(G,"<")then local K=GEA.split(G,"<")[1]local L=GEA.split(G,"<")[2]K=string.format("%02d",GEA.split(K,":")[1])..":"..string.format("%02d",GEA.split(K,":")[2])L=string.format("%02d",GEA.split(L,":")[1])..":"..string.format("%02d",GEA.split(L,":")[2])if K<L then G=K else G=L end elseif string.find(G,">")then local K=GEA.split(G,">")[1]local L=GEA.split(G,">")[2]K=string.format("%02d",GEA.split(K,":")[1])..":"..string.format("%02d",GEA.split(K,":")[2])L=string.format("%02d",GEA.split(L,":")[1])..":"..string.format("%02d",GEA.split(L,":")[2])if K>L then G=K else G=L end else G=string.format("%02d",GEA.split(G,":")[1])..":"..string.format("%02d",GEA.split(G,":")[2])end;return G end;GEA.checkTime=function(n,M)GEA.log("CheckTime",n,GEA.translate[GEA.language]["CHECKING_TIME"].." "..M,false)if not M or M==""then return true end;local C=string.sub(M,1,5)local D=string.sub(M,7,11)local B=os.date("%H:%M")local N=false;if D<C then N=B>=C or B<=D else N=B>=C and B<=D end;if not N then GEA.log("CheckTime",n,GEA.translate[GEA.language]["TIME_OUT"]..M,false,"yellow")else GEA.log("CheckTime",n,GEA.translate[GEA.language]["TIME_IN"]..M,false)end;return N end;GEA.split=function(O,P)local P,Q=P or":",{}local R=string.format("([^%s]+)",P)O:gsub(R,function(S)Q[#Q+1]=S end)return Q end;GEA.trim=function(T)return T:gsub("^%s*(.-)%s*$","%1")end;GEA.match=function(T,U)if type(T)=="nil"then return type(U)=="nil"end;T=tostring(T)U=tostring(U):gsub("%%","%%%%"):gsub("-","%%-")local V=GEA.split(U,"|")for l=1,#V do if not GEA.regexFullAllow then V[l]="^"..V[l].."$"end;if string.match(T,GEA.trim(V[l]))then return true end end;return false end;GEA.check=function(n,q)GEA.log("Check",n,GEA.translate[GEA.language]["CHECK_STARTED"],false)if GEA.isTask("R",n[GEA.keys["INDEX"]])~=nil then GEA.log("Check",n,GEA.translate[GEA.language]["RESTART"],true)n[GEA.keys["NBRUN"]]=0;n[GEA.keys["TOTALRUNS"]]=0;n[GEA.keys["DONE"]]=false;n[GEA.keys["OK"]]=false;GEA.addOrRemoveTask("R",n[GEA.keys["INDEX"]],false)GEA.addOrRemoveTask("S",n[GEA.keys["INDEX"]],false)end;if GEA.isTask("S",n[GEA.keys["INDEX"]])~=nil then GEA.log("Check",n,GEA.translate[GEA.language]["SUPSENDED"],true)return end;if not n[GEA.keys["DONE"]]then n[GEA.keys["OK"]]=false end;if GEA.checkTimes(n)then if GEA.isActivated(n,1,n)then if n[GEA.keys["SECONDES"]]<0 then local W=GEA.isTask("M",n[GEA.keys["INDEX"]].."{(%d+)}")if W~=nil then n[GEA.keys["TOTALRUNS"]]=tonumber(W)GEA.addOrRemoveTask("M",n[GEA.keys["INDEX"]].."{(%d+)}",false)end end;if n[GEA.keys["NBRUN"]]then n[GEA.keys["NBRUN"]]=n[GEA.keys["NBRUN"]]+1;n[GEA.keys["TOTALRUNS"]]=n[GEA.keys["TOTALRUNS"]]+1 else n[GEA.keys["NBRUN"]]=0;n[GEA.keys["TOTALRUNS"]]=0 end;if not n[GEA.keys["DONE"]]then GEA.log("Check",n,GEA.translate[GEA.language]["ACTIVATED_SINCE"]..n[GEA.keys["TOTALRUNS"]]*GEA.checkEvery.."/"..n[GEA.keys["SECONDES"]],false)end;if n[GEA.keys["SECONDES"]]<0 and(n[GEA.keys["MAXTIME"]]==-1 or n[GEA.keys["TOTALRUNS"]]-1<n[GEA.keys["MAXTIME"]])then GEA.sendActions(n)end;if n[GEA.keys["SECONDES"]]<0 and n[GEA.keys["MAXTIME"]]>-1 then GEA.addOrRemoveTask("M",n[GEA.keys["INDEX"]].."{(%d+)}",false)if n[GEA.keys["TOTALRUNS"]]>=n[GEA.keys["MAXTIME"]]then GEA.addOrRemoveTask("S",n[GEA.keys["INDEX"]],true)else GEA.addOrRemoveTask("M",n[GEA.keys["INDEX"]].."{"..n[GEA.keys["TOTALRUNS"]].."}",true)end end else n[GEA.keys["NBRUN"]]=0;n[GEA.keys["TOTALRUNS"]]=0;n[GEA.keys["DONE"]]=false;n[GEA.keys["OK"]]=false end;if GEA.source["type"]=="autostart"and n[GEA.keys["NBRUN"]]*GEA.checkEvery>=n[GEA.keys["SECONDES"]]and not n[GEA.keys["DONE"]]and(n[GEA.keys["MAXTIME"]]==-1 or n[GEA.keys["TOTALRUNS"]]-1<n[GEA.keys["MAXTIME"]])then GEA.sendActions(n)n[GEA.keys["OK"]]=true;if n[GEA.keys["ISREPEAT"]]and n[GEA.keys["MAXTIME"]]==-1 then elseif n[GEA.keys["MAXTIME"]]==-1 or n[GEA.keys["TOTALRUNS"]]>=n[GEA.keys["MAXTIME"]]then GEA.log("Done",n,GEA.translate[GEA.language]["DONE"],true,"DarkSlateBlue")n[GEA.keys["DONE"]]=true end;n[GEA.keys["NBRUN"]]=0 end else n[GEA.keys["NBRUN"]]=0;n[GEA.keys["TOTALRUNS"]]=0;n[GEA.keys["DONE"]]=false;n[GEA.keys["OK"]]=false end end;GEA.isActivated=function(n,X,Y)if X==1 then GEA.log("isActivated",n,GEA.translate[GEA.language]["CHECK_MAIN"],false)else GEA.log("isActivated",n,GEA.translate[GEA.language]["CHECK_IF"],false)end;local Z=-1;local a=n[GEA.keys["ID"]]local _=true;local a0=type(a)if a0=="nil"then _=true;Y[GEA.keys["VALUE"]][X]="true"elseif a0=="boolean"then _=a;if _ then Y[GEA.keys["VALUE"]][X]="true"else Y[GEA.keys["VALUE"]][X]="false"end elseif a0=="number"then local type=fibaro:getType(tonumber(a))GEA.log("isActivated",n,"type : "..type,false)if GEA.match(type,"door_sensor|water_sensor|motion_sensor|com.fibaro.FGMS001|com.fibaro.doorSensor|com.fibaro.waterSensor|com.fibaro.motionSensor")then _=tonumber(fibaro:getValue(tonumber(a),"value"))>=1;if not _ and GEA.source["type"]=="autostart"and fibaro:getValue(tonumber(a),"lastBreached")~=""then _=os.time()-tonumber(fibaro:getValue(tonumber(a),"lastBreached"))<GEA.checkEvery elseif not _ and GEA.source["type"]=="autostart"and fibaro:getModificationTime(tonumber(a),"value")then _=os.time()-tonumber(fibaro:getModificationTime(tonumber(a),"value"))<GEA.checkEvery end elseif GEA.match(type,"dimmable_light|binary_light|rgb_driver|com.fibaro.FGRGBW441M|com.fibaro.multilevelSwitch|com.fibaro.binarySwitch")then if GEA.match(type,"rgb_driver")then _=tonumber(fibaro:getValue(tonumber(a),"value"))>0 or tonumber(fibaro:getValue(tonumber(a),"currentProgramID"))>0 elseif GEA.match(type,"com.fibaro.FGRGBW441M")then _=tonumber(fibaro:getValue(tonumber(a),"value"))>0 and not fibaro:getValue(tonumber(a),"color")=="0,0,0,0"or tonumber(fibaro:getValue(tonumber(a),"currentProgramID"))>0 else _=tonumber(fibaro:getValue(tonumber(a),"value"))>0 end;if not _ and GEA.source["type"]=="autostart"and fibaro:getModificationTime(tonumber(a),"value")then _=os.time()-tonumber(fibaro:getModificationTime(tonumber(a),"value"))<GEA.checkEvery end elseif type=="blind"then _=tonumber(fibaro:getValue(tonumber(a),"value"))>0 else _=tonumber(fibaro:getValue(tonumber(a),"value"))==1 end;Z=tonumber(a)Y[GEA.keys["VALUE"]][X]=fibaro:getValue(tonumber(a),"value")elseif a0=="table"then local a1=string.lower(a[1])if a1=="global"and#a>2 then GEA.log("isActivated",n,"type : global variable",false)_=GEA.match(fibaro:getGlobalValue(a[2]),a[3])Y[GEA.keys["VALUE"]][X]=fibaro:getGlobalValue(a[2])elseif a1=="global+"and#a>2 then GEA.log("isActivated",n,"type : Global+",false)_=tonumber(fibaro:getGlobalValue(a[2]))>tonumber(a[3])Y[GEA.keys["VALUE"]][X]=fibaro:getGlobalValue(a[2])elseif a1=="global-"and#a>2 then GEA.log("isActivated",n,"type : Global-",false)_=tonumber(fibaro:getGlobalValue(a[2]))<tonumber(a[3])Y[GEA.keys["VALUE"]][X]=fibaro:getGlobalValue(a[2])elseif a1=="global!"and#a>2 then GEA.log("isActivated",n,"type : Global!",false)_=not GEA.match(fibaro:getGlobalValue(a[2]),a[3])Y[GEA.keys["VALUE"]][X]=fibaro:getGlobalValue(a[2])elseif a1=="slider"and#a>3 then GEA.log("isActivated",n,"type : Slider",false)_=tonumber(fibaro:getValue(a[2],"ui."..a[3]..".value"))==tonumber(a[4])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif a1=="slider-"and#a>3 then GEA.log("isActivated",n,"type : Slider-",false)_=tonumber(fibaro:getValue(a[2],"ui."..a[3]..".value"))<tonumber(a[4])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif a1=="slider!"and#a>3 then GEA.log("isActivated",n,"type : Slider!",false)_=tonumber(fibaro:getValue(a[2],"ui."..a[3]..".value"))~=tonumber(a[4])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif a1=="slider+"and#a>3 then GEA.log("isActivated",n,"type : Slider+",false)_=tonumber(fibaro:getValue(a[2],"ui."..a[3]..".value"))>tonumber(a[4])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif a1=="label"and#a>3 then GEA.log("isActivated",n,"type : Label",false)_=GEA.match(fibaro:getValue(a[2],"ui."..a[3]..".value"),a[4])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif a1=="label!"and#a>3 then GEA.log("isActivated",n,"type : Label!",false)_=not GEA.match(fibaro:getValue(a[2],"ui."..a[3]..".value"),a[4])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(a[2],"ui."..a[3]..".value")elseif a1=="property"and#a>3 then GEA.log("isActivated",n,"type : Property",false)_=GEA.match(fibaro:getValue(a[2],a[3]),a[4])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(a[2],a[3])elseif a1=="property!"and#a>3 then GEA.log("isActivated",n,"type : Property",false)_=not GEA.match(fibaro:getValue(a[2],a[3]),a[4])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(a[2],a[3])elseif a1=="batteries"and#a>1 then GEA.log("isActivated",n,"type : batteries",false)local a2=""for l=1,1000 do local a3=fibaro:getValue(l,'batteryLevel')if type(a3)~=nil and tonumber(a3)~=nil and tonumber(a3)<=tonumber(a[2])or tonumber(a3)==255 then GEA.log("isActivated",n,"checking : batteries "..fibaro:getName(l),false)if not string.find(fibaro:getName(l),"Zwave_")then a2=a2 ..GEA.translate[GEA.language]["BATTERIE"].." ["..fibaro:getName(l).."] "..a3 .."%\n"_=true end end end;Y[GEA.keys["VALUE"]][X]=a[2]n[GEA.keys["MESSAGE"]]=a2 elseif(a1=="sensor"or a1=="power")and#a>2 then GEA.log("isActivated",n,"type : Sensor",false)_=tonumber(fibaro:getValue(tonumber(a[2]),GEA.power))==tonumber(a[3])Z=tonumber(a[2])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(tonumber(a[2]),GEA.power)elseif(a1=="sensor+"or a1=="power+")and#a>2 then GEA.log("isActivated",n,"type : Sensor+",false)_=tonumber(fibaro:getValue(tonumber(a[2]),GEA.power))>tonumber(a[3])Z=tonumber(a[2])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(tonumber(a[2]),GEA.power)elseif(a1=="sensor-"or a1=="power-")and#a>2 then GEA.log("isActivated",n,"type : Sensor-",false)_=tonumber(fibaro:getValue(tonumber(a[2]),GEA.power))<tonumber(a[3])Z=tonumber(a[2])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(tonumber(a[2]),GEA.power)elseif(a1=="sensor!"or a1=="power!")and#a>2 then GEA.log("isActivated",n,"type : Sensor!",false)_=tonumber(fibaro:getValue(tonumber(a[2]),GEA.power))~=tonumber(a[3])Z=tonumber(a[2])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(tonumber(a[2]),GEA.power)elseif a1=="battery"and#a>2 then GEA.log("isActivated",n,"type : Battery",false)_=false;local a3=fibaro:getValue(tonumber(a[2]),'batteryLevel')if type(a3)~=nil and tonumber(a3)<=tonumber(a[3])or tonumber(a3)==255 then _=true;Y[GEA.keys["VALUE"]][X]=a3 end;Z=tonumber(a[2])elseif a1=="value"and#a>2 then GEA.log("isActivated",n,"type : Value",false)_=tonumber(fibaro:getValue(tonumber(a[2]),"value"))==tonumber(a[3])Z=tonumber(a[2])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(tonumber(a[2]),"value")elseif a1=="value+"and#a>2 then GEA.log("isActivated",n,"type : Value+",false)_=tonumber(fibaro:getValue(tonumber(a[2]),"value"))>tonumber(a[3])Z=tonumber(a[2])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(tonumber(a[2]),"value")elseif a1=="value-"and#a>2 then GEA.log("isActivated",n,"type : Value-",false)_=tonumber(fibaro:getValue(tonumber(a[2]),"value"))<tonumber(a[3])Z=tonumber(a[2])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(tonumber(a[2]),"value")elseif a1=="value!"and#a>2 then GEA.log("isActivated",n,"type : Value!",false)_=tonumber(fibaro:getValue(tonumber(a[2]),"value"))~=tonumber(a[3])Z=tonumber(a[2])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(tonumber(a[2]),"value")elseif a1=="dead"and#a>1 then GEA.log("isActivated",n,"type : isDead",false)_=tonumber(fibaro:getValue(tonumber(a[2]),"dead"))>=1;Y[GEA.keys["VALUE"]][X]=fibaro:getValue(tonumber(a[2]),"dead")elseif a1=="weather"and#a>1 then GEA.log("isActivated",n,"type : weather",false)_=GEA.match(fibaro:getValue(3,"WeatherConditionConverted"),a[2])Y[GEA.keys["VALUE"]][X]=fibaro:getValue(3,"WeatherConditionConverted")elseif a1=="function"and#a>1 then GEA.log("isActivated",n,"type : Function",false)local a4,a5,a6=pcall(a[2])if a4 then _=a5;if a6 then Y[GEA.keys["VALUE"]][X]=a6 end else _=false end elseif a1=="group"and#a>1 then GEA.log("isActivated",n,"type : Group",false)for l=1,#GEA.todo do if GEA.todo[l][GEA.keys["GROUPS"]][tonumber(a[2])]then if not GEA.todo[l][GEA.keys["OK"]]then _=false end end end;Y[GEA.keys["VALUE"]][X]=fibaro:getValue(tonumber(a[2]),"")elseif a1=="alarm"then GEA.log("isActivated",n,"type : alarm",false)local F=fibaro:getValue(tonumber(a[2]),"ui.lblAlarme.value")if not(type(F)=="nil"or F==""or F=="--:--")then _=GEA.checkTime(n,GEA.flatTime(F).."-"..GEA.flatTime(F))if _ then local jours=fibaro:getValue(tonumber(a[2]),"ui.lblJours.value")local v=""if string.find(jours,"Lu")or string.find(jours,"Mo")then v=v.."Monday"end;if string.find(jours,"Ma")or string.find(jours,"Tu")then v=v.."Tuesday"end;if string.find(jours,"Me")or string.find(jours,"We")then v=v.."Wednesday"end;if string.find(jours,"Je")or string.find(jours,"Th")then v=v.."Thursday"end;if string.find(jours,"Ve")or string.find(jours,"Fr")then v=v.."Friday"end;if string.find(jours,"Sa")or string.find(jours,"Sa")then v=v.."Saturday"end;if string.find(jours,"Di")or string.find(jours,"Su")then v=v.."Sunday"end;_=GEA.checkDay(v)end;Y[GEA.keys["VALUE"]][X]=F else _=false end end else end;if X==1 then for l=1,#n[GEA.keys["PARAMS"]]do if string.lower(n[GEA.keys["PARAMS"]][l][1])=="inverse"then _=not _ end end;if Z>-1 and type(n[GEA.keys["PARAMS"]])=="table"then for l=1,#n[GEA.keys["PARAMS"]]do local A=n[GEA.keys["PARAMS"]][l]if string.lower(A[1])=="armed"then _=_ and tonumber(fibaro:getValue(Z,"armed"))>0;if#A>1 then _=_ and tonumber(fibaro:getValue(A[2],"armed"))>0 end elseif string.lower(A[1])=="disarmed"then _=_ and tonumber(fibaro:getValue(Z,"armed"))==0;if#A>1 then _=_ and tonumber(fibaro:getValue(A[2],"armed"))==0 end end end end;if _ then for l=1,#n[GEA.keys["PARAMS"]]do local A=n[GEA.keys["PARAMS"]][l]if type(A)=="table"and string.lower(A[1])=="if"then local a7=true;for a8=1,#A[2]do if type(A[2])=="table"then if not GEA.isActivated({A[2][a8]},a8+1,n)then a7=false;GEA.log("!CANCEL! isActivated",n,GEA.translate[GEA.language]["CHECK_IF_FAILED"],false,"yellow")end else GEA.log(GEA.translate[GEA.language]["ERROR"],n,GEA.translate[GEA.language]["ERROR_IF"],true,"red")end end;_=a7 end end end end;if _ then GEA.log("isActivated",n,GEA.translate[GEA.language]["ACTIVATED"],false)else GEA.log("!CANCEL! isActivated",n,GEA.translate[GEA.language]["DESACTIVATED"],false,"yellow")end;return _ end;GEA.getMessage=function(n,c)local a2=""if n[GEA.keys["MESSAGE"]]then a2=n[GEA.keys["MESSAGE"]]end;if c and c~=""then a2=c end;if n[GEA.keys["VALUE"]][1]then a2=string.gsub(a2,"#value#",n[GEA.keys["VALUE"]][1])a2=string.gsub(a2,"#value%[1%]#",n[GEA.keys["VALUE"]][1])end;if n[GEA.keys["VALUE"]][2]then a2=string.gsub(a2,"#value%[2%]#",n[GEA.keys["VALUE"]][2])end;if n[GEA.keys["VALUE"]][3]then a2=string.gsub(a2,"#value%[3%]#",n[GEA.keys["VALUE"]][3])end;if n[GEA.keys["VALUE"]][4]then a2=string.gsub(a2,"#value%[4%]#",n[GEA.keys["VALUE"]][4])end;if n[GEA.keys["VALUE"]][5]then a2=string.gsub(a2,"#value%[5%]#",n[GEA.keys["VALUE"]][5])end;if n[GEA.keys["VALUE"]][6]then a2=string.gsub(a2,"#value%[6%]#",n[GEA.keys["VALUE"]][6])end;if n[GEA.keys["VALUE"]][7]then a2=string.gsub(a2,"#value%[7%]#",n[GEA.keys["VALUE"]][7])end;if n[GEA.keys["VALUE"]][8]then a2=string.gsub(a2,"#value%[8%]#",n[GEA.keys["VALUE"]][8])end;if n[GEA.keys["VALUE"]][9]then a2=string.gsub(a2,"#value%[9%]#",n[GEA.keys["VALUE"]][9])end;a2=string.gsub(a2,"#time#",os.date("%X"))a2=string.gsub(a2,"#date#",os.date("%x"))if n[GEA.keys["NAME"]][1]then a2=string.gsub(a2,"#name#",n[GEA.keys["NAME"]][1])a2=string.gsub(a2,"#name%[1%]#",n[GEA.keys["NAME"]][1])end;if n[GEA.keys["NAME"]][2]then a2=string.gsub(a2,"#name%[2%]#",n[GEA.keys["NAME"]][2])end;if n[GEA.keys["NAME"]][3]then a2=string.gsub(a2,"#name%[3%]#",n[GEA.keys["NAME"]][3])end;if n[GEA.keys["NAME"]][4]then a2=string.gsub(a2,"#name%[4%]#",n[GEA.keys["NAME"]][4])end;if n[GEA.keys["NAME"]][5]then a2=string.gsub(a2,"#name%[5%]#",n[GEA.keys["NAME"]][5])end;if n[GEA.keys["NAME"]][6]then a2=string.gsub(a2,"#name%[6%]#",n[GEA.keys["NAME"]][6])end;if n[GEA.keys["NAME"]][7]then a2=string.gsub(a2,"#name%[7%]#",n[GEA.keys["NAME"]][7])end;if n[GEA.keys["NAME"]][8]then a2=string.gsub(a2,"#name%[8%]#",n[GEA.keys["NAME"]][8])end;if n[GEA.keys["NAME"]][9]then a2=string.gsub(a2,"#name%[9%]#",n[GEA.keys["NAME"]][9])end;if n[GEA.keys["ROOM"]][1]then a2=string.gsub(a2,"#room#",n[GEA.keys["ROOM"]][1])a2=string.gsub(a2,"#room%[1%]#",n[GEA.keys["ROOM"]][1])end;if n[GEA.keys["ROOM"]][2]then a2=string.gsub(a2,"#room%[2%]#",n[GEA.keys["ROOM"]][2])end;if n[GEA.keys["ROOM"]][3]then a2=string.gsub(a2,"#room%[3%]#",n[GEA.keys["ROOM"]][3])end;if n[GEA.keys["ROOM"]][4]then a2=string.gsub(a2,"#room%[4%]#",n[GEA.keys["ROOM"]][4])end;if n[GEA.keys["ROOM"]][5]then a2=string.gsub(a2,"#room%[5%]#",n[GEA.keys["ROOM"]][5])end;if n[GEA.keys["ROOM"]][6]then a2=string.gsub(a2,"#room%[6%]#",n[GEA.keys["ROOM"]][6])end;if n[GEA.keys["ROOM"]][7]then a2=string.gsub(a2,"#room%[7%]#",n[GEA.keys["ROOM"]][7])end;if n[GEA.keys["ROOM"]][8]then a2=string.gsub(a2,"#room%[8%]#",n[GEA.keys["ROOM"]][8])end;if n[GEA.keys["ROOM"]][9]then a2=string.gsub(a2,"#room%[9%]#",n[GEA.keys["ROOM"]][9])end;a2=string.gsub(a2,"#seconds#",n[GEA.keys["SECONDES"]])local a9=GEA.getDureeInString(n[GEA.keys["TOTALRUNS"]]*GEA.checkEvery)a2=string.gsub(a2,"#duration#",a9[1])a2=string.gsub(a2,"#durationfull#",a9[2])a2=string.gsub(a2,"#runs#",n[GEA.keys["TOTALRUNS"]])return a2 end;GEA.getDureeInString=function(aa)local aa=aa;local ab=""nHours=math.floor(aa/3600)nMins=math.floor(aa/60-nHours*60)nSecs=math.floor(aa-nHours*3600-nMins*60)aa=""if nHours>0 then aa=aa..nHours.."h "ab=ab..nHours;if nHours>1 then ab=ab.." "..GEA.translate[GEA.language]["HOURS"]else ab=ab.." "..GEA.translate[GEA.language]["HOUR"]end end;if nMins>0 then aa=aa..nMins.."m "if nHours>0 then ab=ab.." "end;if nSecs==0 and nHours>0 then ab=ab.."et "end;ab=ab..nMins;if nMins>1 then ab=ab.." "..GEA.translate[GEA.language]["MINUTES"]else ab=ab.." "..GEA.translate[GEA.language]["MINUTE"]end end;if nSecs>0 then aa=aa..nSecs.."s"if nMins>0 then ab=ab.." et "end;ab=ab..nSecs;if nSecs>1 then ab=ab.." "..GEA.translate[GEA.language]["SECONDS"]else ab=ab.." "..GEA.translate[GEA.language]["SECOND"]end end;return{aa,ab}end;GEA.sendActions=function(n)GEA.log("sendActions",n,GEA.translate[GEA.language]["ACTIONS"],true)local ac=false;if type(n[GEA.keys["PARAMS"]])=="table"then for l=1,#n[GEA.keys["PARAMS"]]do local ad=n[GEA.keys["PARAMS"]][l]if type(ad)=="table"then local a1=string.lower(ad[1])if a1=="turnoff"or a1=="turnon"or a1=="switch"then local a=GEA.getId(n,ad)if a>0 then local ae=fibaro:getValue(tonumber(a),"value")local af=fibaro:getType(tonumber(a))if GEA.match(af,"rgb_driver")and(tonumber(fibaro:getValue(tonumber(a),"value"))>0 or tonumber(fibaro:getValue(tonumber(a),"currentProgramID"))>0)then ae=1 elseif GEA.match(af,"com.fibaro.FGRGBW441M")then if fibaro:getValue(tonumber(a),"color")~="0,0,0,0"or tonumber(fibaro:getValue(tonumber(a),"currentProgramID"))>0 then ae=1 end end;if tonumber(ae)>=1 and a1=="turnoff"or tonumber(ae)==0 and a1=="turnon"then fibaro:call(tonumber(a),ad[1])elseif a1=="switch"then local ag="turnOff"if tonumber(ae)==0 then ag="turnOn"end;fibaro:call(tonumber(a),ag)end;GEA.log("sendActions",n,"!ACTION! : "..ad[1],true)end end;if a1=="global"and#ad>2 then local a6=string.match(ad[3],"(%d+)")if GEA.match(ad[3],"inc%+")then local ah=tonumber(fibaro:getGlobalValue(ad[2]))if type(a6)~="nil"then fibaro:setGlobal(ad[2],ah+a6)else fibaro:setGlobal(ad[2],ah+1)end elseif GEA.match(ad[3],"dec%-")then local ah=tonumber(fibaro:getGlobalValue(ad[2]))if type(a6)~="nil"then fibaro:setGlobal(ad[2],ah-a6)else fibaro:setGlobal(ad[2],ah-1)end else fibaro:setGlobal(ad[2],GEA.getMessage(n,ad[3]))end;GEA.log("sendActions",n,"!ACTION! : setGlobal "..ad[2]..","..GEA.getMessage(n,ad[3]),true)elseif a1=="portable"and#ad>1 then fibaro:call(tonumber(ad[2]),"sendPush",GEA.getMessage(n,nil))GEA.log("sendActions",n,"!ACTION! : pushed to "..ad[2],true)ac=true elseif a1=="email"and#ad>1 then local ai="GEA Notification"if#ad>2 then ai=ad[3]end;fibaro:call(tonumber(ad[2]),"sendEmail",GEA.getMessage(n,ai),GEA.getMessage(n,nil))GEA.log("sendActions",n,"!ACTION! : email to "..ad[2],true)elseif a1=="picture"and#ad>2 then local aj=tonumber(ad[3])local ak=tonumber(ad[2])fibaro:call(ak,"sendPhotoToUser",aj)GEA.log("sendActions",n,"!ACTION! : email picture from camera "..ak.." to "..aj,true)elseif a1=="scenario"and#ad>1 then fibaro:startScene(ad[2])GEA.log("sendActions",n,"!ACTION! : Scene "..ad[2],true)elseif a1=="stopscenario"and#ad>1 then if fibaro:countScenes(ad[2])then fibaro:killScene(ad[2])GEA.log("sendActions",n,"!ACTION! : Stop Scene "..ad[2],true)else GEA.log("sendActions",n,"!ACTION! : No Stop Scene "..ad[2],true)end elseif a1=="enablescenario"and#ad>1 then fibaro:setSceneEnabled(ad[2],true)GEA.log("sendActions",n,"!ACTION! : Scene enabled "..ad[2],true)elseif a1=="disablescenario"and#ad>1 then fibaro:setSceneEnabled(ad[2],false)GEA.log("sendActions",n,"!ACTION! : Scene disabled "..ad[2],true)elseif a1=="function"then local a4,a5=pcall(ad[2])if a4 then GEA.log("sendActions",n,"!ACTION! : Function OK",true)else GEA.log("sendActions",n,"!ACTION! : Function "..tostring(a5 or"Inconnu."),true)end elseif a1=="setarmed"and#ad>1 then fibaro:call(ad[2],"setArmed",1)GEA.log("sendActions",n,"!ACTION! : setArmed "..ad[2],true)elseif a1=="setdisarmed"and#ad>1 then fibaro:call(ad[2],"setArmed",0)GEA.log("sendActions",n,"!ACTION! : setDisarmed "..ad[2],true)elseif a1=="currenticon"and#ad>2 then fibaro:call(ad[2],"setProperty","currentIcon",tostring(ad[3]))GEA.log("sendActions",n,"!ACTION! : CurrentIcon "..ad[2],true)elseif a1=="copyglobal"and#ad>2 then fibaro:setGlobal(ad[3],fibaro:getGlobalValue(ad[2]))GEA.log("sendActions",n,"!ACTION! : CopyGlobal "..ad[2],true)elseif a1=="restarttask"and#ad>1 then GEA.addOrRemoveTask("R",ad[2],true)GEA.log("sendActions",n,"!ACTION! : Restart "..ad[2],true)elseif a1=="stoptask"and#ad>1 then GEA.addOrRemoveTask("S",ad[2],true)GEA.log("sendActions",n,"!ACTION! : StopTask "..ad[2],true)elseif a1=="wakeup"and#ad>1 then fibaro:call(1,'wakeUpAllDevices',ad[2])GEA.log("sendActions",n,"!ACTION! : WakeUp "..ad[2],true)elseif a1=="virtualdevice"and#ad>2 then fibaro:call(ad[2],"pressButton",tostring(ad[3]))GEA.log("sendActions",n,"!ACTION! : VirtualDevice "..ad[2]..","..ad[3],true)elseif a1=="slider"and#ad>3 then fibaro:call(ad[2],"setSlider",ad[3],ad[4])GEA.log("sendActions",n,"!ACTION! : Slider "..ad[2]..","..ad[3].."="..ad[4],true)elseif a1=="label"and#ad>3 then fibaro:call(ad[2],"setProperty","ui."..ad[3]..".value",GEA.getMessage(n,ad[4]))GEA.log("sendActions",n,"!ACTION! : Label "..ad[2]..","..ad[3].." = "..GEA.getMessage(n,ad[4]),true)elseif a1=="rgb"and#ad>5 then if ad[3]==-1 or ad[4]==-1 or ad[5]==-1 or ad[6]==-1 then if ad[3]~=-1 then fibaro:call(ad[2],"setR",ad[3])end;if ad[4]~=-1 then fibaro:call(ad[2],"setG",ad[4])end;if ad[5]~=-1 then fibaro:call(ad[2],"setB",ad[5])end;if ad[6]~=-1 then fibaro:call(ad[2],"setW",ad[6])end else fibaro:call(ad[2],"setColor",ad[3],ad[4],ad[5],ad[6])end;GEA.log("sendActions",n,"!ACTION! : RGB "..ad[2]..", Color = "..ad[3]..","..ad[4]..","..ad[5]..","..ad[6])elseif a1=="program"and#ad>2 then if tonumber(fibaro:getValue(tonumber(ad[2]),"currentProgramID"))~=tonumber(ad[3])then fibaro:call(ad[2],"startProgram",ad[3])end;GEA.log("sendActions",n,"!ACTION! : startProgram "..ad[2]..", program = "..ad[3])elseif a1=="value"then local a=GEA.getId(n,ad)if a>0 then if#ad>2 then fibaro:call(a,"setValue",ad[3])GEA.log("sendActions",n,"!ACTION! : setValue "..ad[3],true)else fibaro:call(a,"setValue",ad[2])GEA.log("sendActions",n,"!ACTION! : setValue "..ad[2],true)end end elseif a1=="open"or a1=="close"then local a=GEA.getId(n,ad)if a>0 then local al=100;if#ad>2 then if a1=="close"then al=al-ad[3]else al=ad[3]end;fibaro:call(a,"setValue",al)GEA.log("sendActions",n,"!ACTION! : setValue "..al,true)elseif#ad>1 then if a1=="close"then al=al-ad[2]else al=ad[2]end;fibaro:call(a,"setValue",al)GEA.log("sendActions",n,"!ACTION! : setValue "..al,true)else fibaro:call(a,ad[1])GEA.log("sendActions",n,"!ACTION! :  "..ad[1],true)end end end end end end;if n[GEA.keys["MESSAGE"]]~=""and not ac then if n[GEA.keys["MESSAGE"]]=="debug"then fibaro:debug("=============="..os.time().."=====================")else for l=1,#GEA.portables do fibaro:call(tonumber(GEA.portables[l]),"sendPush",GEA.getMessage(n,nil))GEA.log("sendActions",n,"!ACTION! : sendPush "..GEA.getMessage(n,nil),true)end end end end;GEA.getId=function(n,am)local a=0;if am and type(am)=="table"and#am>1 and(string.lower(am[1])=="turnoff"or string.lower(am[1])=="turnon"or string.lower(am[1])=="switch")then a=tonumber(am[2])elseif am and type(am)=="table"and#am>2 and(string.lower(am[1])=="value"or string.lower(am[1])=="open"or string.lower(am[1])=="close")then a=tonumber(am[2])elseif type(n[GEA.keys["ID"]])=="number"then a=n[GEA.keys["ID"]]elseif type(n[GEA.keys["ID"]])=="table"and string.lower(n[GEA.keys["ID"]][1])=="sensor+"or string.lower(n[GEA.keys["ID"]][1])=="sensor-"or string.lower(n[GEA.keys["ID"]][1])=="value-"or string.lower(n[GEA.keys["ID"]][1])=="value+"or string.lower(n[GEA.keys["ID"]][1])=="dead"then a=tonumber(n[GEA.keys["ID"]][2])end;if a==0 then fibaro:debug(GEA.translate[GEA.language]["DEVICE_NOT_FOUND"])end;return a end;GEA.pause=function()local an=true;if#GEA.getGlobalForActivation>0 then an=false;if fibaro:getGlobalValue(GEA.getGlobalForActivation[1])==GEA.getGlobalForActivation[2]then an=true else GEA.log("Run",nil,GEA.translate[GEA.language]["GEA_SUSPENDED"].." "..GEA.getGlobalForActivation[1].." "..GEA.translate[GEA.language]["VALUE"].." "..fibaro:getGlobalValue(GEA.getGlobalForActivation[1]).." "..GEA.translate[GEA.language]["REQUIRED"].." "..GEA.getGlobalForActivation[2],true)end end;return not an end;GEA.run=function()if config then config()end;if setEvents then setEvents()end;if GEA.isVersionFour then GEA.power="power"end;GEA.log("GEA Version "..GEA.version,nil," "..GEA.translate[GEA.language]["RUNNING"].."...",true,"green")if#GEA.todo==0 then if GEA.source["type"]~="property"then GEA.log(GEA.translate[GEA.language]["RUN"],nil,GEA.translate[GEA.language]["NOTHING_TODO"],true)else GEA.log(GEA.translate[GEA.language]["RUN"],nil,GEA.translate[GEA.language]["NOTHING_TODOID"]..GEA.source["deviceID"],true)end;return false end;local ao=#GEA.todo;if GEA.source["type"]=="autostart"then if GEA.useTasksGlobal then fibaro:setGlobal(GEA.globalTasks,GEA.suspended)else GEA.tasks=GEA.suspended end;local ap=GEA.checkEvery;local aq=1;local ar=true;local as=os.time()while true do GEA.log(GEA.translate[GEA.language]["RUN"],nil,GEA.translate[GEA.language]["SLEEPING"].." "..GEA.checkEvery.." "..GEA.translate[GEA.language]["SECONDS"],false)fibaro:sleep(ap*1000)local at=os.time()local au=GEA.checkAllToDo(ao)local av=au-at;if ar then av=av*2;ar=false end;ap=GEA.checkEvery-av;if aq>=20 then local a2=GEA.translate[GEA.language]["RUN_FOR"]..av.."s "..GEA.translate[GEA.language]["RUN_NEW"]..ap.."s / "..GEA.translate[GEA.language]["RUN_SINCE"].." "..GEA.getDureeInString(os.time()-as)[1]fibaro:debug("<span style=\"color:CadetBlue; padding-left:125px; display:inline-block; width:80%; margin-top:-18px; padding-top:-18px; text-align:left;\">"..a2 .."</span>")aq=0 end;aq=aq+1 end else GEA.checkAllToDo(ao)end end;GEA.checkAllToDo=function(ao)if not GEA.pause()then for l=1,ao do GEA.log(GEA.translate[GEA.language]["RUN"],GEA.todo[l],GEA.translate[GEA.language]["CHECKING"],false)if GEA.catchError then if not pcall(function()GEA.check(GEA.todo[l],l)end)then GEA.log(GEA.translate[GEA.language]["ERROR"],GEA.todo[l],GEA.translate[GEA.language]["CHECKING"],true,red)end else GEA.check(GEA.todo[l],l)end end end;return os.time()end;GEA.log=function(aw,n,c,ax,ay)if ax or GEA.debug then local a2=""local j="If"if not n and not ax then return elseif n then local az=type(n[GEA.keys["ID"]])if n[GEA.keys["NAME"]]then j=n[GEA.keys["NAME"]]if type(j)=="table"then j=j[1]end;j=j.." ] "if az=="nil"or az=="boolean"then a2=a2 .."[ "..j elseif az=="number"then a2=a2 .."[ "..n[GEA.keys["ID"]].." | "..j elseif az=="table"then lowerId=string.lower(n[GEA.keys["ID"]][1])if GEA.match(lowerId,"global|global.")then a2=a2 .."[ "..n[GEA.keys["ID"]][2].."="..n[GEA.keys["ID"]][3].." ] "elseif lowerId=="batteries"then a2=a2 .."[ "..n[GEA.keys["ID"]][2].." ] "elseif lowerId=="group"then a2=a2 .."[ "..j elseif GEA.match(lowerId,"sensor|sensor.|value|value.|dead|sceneactivation|battery")then a2=a2 .."[ "..j elseif GEA.match(lowerId,"slider|slider.|label|label.|property|property.")then a2=a2 .."[ "..j elseif lowerId=="weather"then a2=a2 .."[ Weather ] "elseif lowerId=="function"then a2=a2 .."[ Function ] "elseif lowerId=="alarm"then a2=a2 .."Alarm "..fibaro:getValue(tonumber(n[GEA.keys["ID"]][2]),"ui.lblAlarme.value")else end end end end;if aw and aw~=""then a2=a2 ..string.format("%-20s",aw)..": "end;if c and c~=""then a2=a2 ..string.format("%-20s",c)end;if n then if n[GEA.keys["INDEX"]]then a2=a2 .." (ID: "..n[GEA.keys["INDEX"]]..")"end;if n[GEA.keys["PARAMS"]]and type(n[GEA.keys["PARAMS"]])=="table"and#n[GEA.keys["PARAMS"]]>0 then for l=1,#n[GEA.keys["PARAMS"]]do a2=a2 .." ["local aA=n[GEA.keys["PARAMS"]][l]if type(aA)=="table"then for a8=1,#aA do if string.lower(aA[1])=="if"then if a8==1 then a2=a2 .."If..."end elseif string.lower(aA[1])=="function"then if a8==1 then a2=a2 .."Function..."end else a2=a2 ..aA[a8]..","end end end;a2=a2:sub(1,a2:len()-1).."]"end end end;fibaro:debug("<span style=\"color:"..(ay or"white").."; padding-left: 125px; display:inline-block; width:80%; margin-top:-18px; padding-top:-18px; text-align:left;\">"..a2 .."</span>")end end end;GEA.run()